name: Test rmk-template

on:
  push:
    branches: ["master", "feat/rework"]
  pull_request:
    branches: ["master", "feat/rework"]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build_templates:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        template_name:
          - rp2040
          - nrf52840
          - nrf52832
          - stm32f103cb
          - stm32h7b0vb
          - esp32c3
          - esp32c6
    steps:
      - uses: cargo-bins/cargo-binstall@main
      - uses: actions/checkout@v3
      - name: Install rmkit and cargo-make
        run: cargo binstall cargo-make rmkit flip-link -y
      - name: Install target
        run: rustup default stable && rustup target add thumbv6m-none-eabi thumbv7em-none-eabihf thumbv7m-none-eabi riscv32imac-unknown-none-elf riscv32imc-unknown-none-elf
      - name: Create project
        run: rmkit init --project-name ${{ matrix.template_name }}_test --chip ${{ matrix.template_name }} --split false --local-path ${{ matrix.template_name }}
      - name: Build template
        working-directory: ${{ matrix.template_name }}_test
        run: cargo build --release
      - name: Build uf2
        working-directory: ${{ matrix.template_name }}_test
        run: cargo make uf2 --release
  build_split_templates:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        template_name:
          - rp2040
          - nrf52840
    steps:
      - uses: cargo-bins/cargo-binstall@main
      - uses: actions/checkout@v3
      - name: Install rmkit and cargo-make
        run: cargo binstall cargo-make rmkit flip-link -y
      - name: Install target
        run: rustup default stable && rustup target add thumbv6m-none-eabi thumbv7em-none-eabihf thumbv7m-none-eabi
      - name: Create project
        run: rmkit init --project-name ${{ matrix.template_name }}_split_test --chip ${{ matrix.template_name }} --split true --local-path ${{ matrix.template_name }}_split
      - name: Build template
        working-directory: ${{ matrix.template_name }}_split_test
        run: cargo build --release
      - name: Build uf2
        working-directory: ${{ matrix.template_name }}_split_test
        run: cargo make uf2 --release

  build_esp_templates:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        template_name:
          - esp32s3
    steps:
      - uses: cargo-bins/cargo-binstall@main
      - uses: actions/checkout@v3
      - name: Install ldproxy and espup
        run: cargo binstall ldproxy espup rmkit -y
      - name: Install esp toolchain
        run: espup install
      - name: Create project
        run: rmkit init --project-name ${{ matrix.template_name }}_test --chip ${{ matrix.template_name }} --split false --local-path ${{ matrix.template_name }}
      - name: Build template
        working-directory: ${{ matrix.template_name }}_test
        run: cargo +esp build --release
