# How to customize your keyboard config: https://haobogu.github.io/rmk/keyboard_configuration.html
[keyboard]
name = "RMK Keyboard"
product_name = "RMK Keyboard"
vendor_id = 0x4c4b
product_id = 0x4643
manufacturer = "haobo"
{% if microcontroller_family == "nrf" -%}
chip = "{{ nrf_feature }}"
{% else -%}
chip = "{{ chip }}"
{% endif -%}
{% if microcontroller_family == "esp" -%}
usb_enable = false
{% endif %}
{% if chip == "nrf52832_xxAA" -%}
usb_enable = false
{% endif %}


[layout]
# WARNING: Currently row2col/col2row is set in RMK's feature gate, configs here do nothing actually
# row2col = true
rows = 4
cols = 3
layers = 2
keymap = [
    [
        ["Kp7", "Kp8", "Kp9"],
        ["Kp4", "Kp5", "Kp6"],
        ["Kp1", "Kp2", "Kp3"],
        ["Kp0", "MO(1)", "Dot"]
    ],
    [
        ["_", "_", "_"],
        ["_", "_", "_"],
        ["_", "_", "_"],
        ["_", "_", "_"]
    ],
]

[light]
# All light pins are high-active by default, uncomment if you want it to be low-active
# capslock.pin = "PB2"
# capslock.low_active = true
# scrolllock.pin = "PA3"
# scrolllock.low_active = true
# Just ignore if no light pin is used for it
# numslock.pin = "PA5"
# numslock.low_active = true

[storage]
# Storage feature is enabled by default
# enabled = false

# !!! Warning: RMK uses last 2 sectors of your microcontroller's flash by default. You have to ensure that those flash space is not used.
# If you're using a bootloader which puts itself at the end of the flast, like Adafruit_nRF52_Bootloader, RMK will break the bootloader.
# Setting the `start_addr` manually to avoid this. See: https://haobogu.github.io/rmk/storage.html

{% if connection == "BLE" -%}
[ble]
enabled = true
{% endif %}

{% if keyboard_type == "split" -%}
[split]
{% if connection == "BLE" -%}
connection = "ble"
{% elsif connection == "USB" -%}
connection = "serial"
{% endif %}

[split.central]
rows = 2
cols = 2
row_offset = 0
col_offset = 0
{% if split_microcontroller == "nrf52840" -%}
ble_addr = [0x18, 0xe2, 0x21, 0x80, 0xc0, 0xc7]
input_pins = ["P0_12", "P0_13"]
output_pins = ["P0_14", "P0_15"]
{% elsif split_microcontroller == "rp2040" -%}
serial = [
    { instance = "UART0", tx_pin = "PIN_0", rx_pin = "PIN_1" },
]
input_pins = ["PIN_9", "PIN_11"]
output_pins = ["PIN_10", "PIN_12"]
{% endif %}

[[split.peripheral]]
rows = 2
cols = 1
row_offset = 2
col_offset = 2
{% if split_microcontroller == "nrf52840" -%}
ble_addr = [0x7e, 0xfe, 0x73, 0x9e, 0x66, 0xe3]
input_pins = ["P1_11", "P1_10"]
output_pins = ["P0_30"]
{% elsif split_microcontroller == "rp2040" -%}
serial = [{ instance = "UART0", tx_pin = "PIN_0", rx_pin = "PIN_1" }]
input_pins = ["PIN_9", "PIN_11"]
output_pins = ["PIN_10"]
{% endif %}

{% endif %}
